[{"D:\\portfolio\\reactgram\\src\\index.js":"1","D:\\portfolio\\reactgram\\src\\App.js":"2","D:\\portfolio\\reactgram\\src\\reportWebVitals.js":"3","D:\\portfolio\\reactgram\\src\\firebase.js":"4","D:\\portfolio\\reactgram\\src\\utils\\pagination.js":"5","D:\\portfolio\\reactgram\\src\\components\\counters.jsx":"6","D:\\portfolio\\reactgram\\src\\components\\navbar.jsx":"7","D:\\portfolio\\reactgram\\src\\components\\inputForm.jsx":"8","D:\\portfolio\\reactgram\\src\\components\\countersTable.jsx":"9","D:\\portfolio\\reactgram\\src\\components\\common\\pagination.jsx":"10","D:\\portfolio\\reactgram\\src\\components\\common\\search.jsx":"11","D:\\portfolio\\reactgram\\src\\context\\counterContex.js":"12","D:\\portfolio\\reactgram\\src\\components\\classList.jsx":"13","D:\\portfolio\\reactgram\\src\\components\\resetButton.jsx":"14"},{"size":566,"mtime":1612931252620,"results":"15","hashOfConfig":"16"},{"size":393,"mtime":1613201495686,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1612931252620,"results":"18","hashOfConfig":"16"},{"size":534,"mtime":1612931252619,"results":"19","hashOfConfig":"16"},{"size":203,"mtime":1613197410279,"results":"20","hashOfConfig":"16"},{"size":5441,"mtime":1613219805673,"results":"21","hashOfConfig":"16"},{"size":1012,"mtime":1612931252619,"results":"22","hashOfConfig":"16"},{"size":2215,"mtime":1613217273735,"results":"23","hashOfConfig":"16"},{"size":3489,"mtime":1613214349284,"results":"24","hashOfConfig":"16"},{"size":491,"mtime":1613215997974,"results":"25","hashOfConfig":"16"},{"size":501,"mtime":1613216672583,"results":"26","hashOfConfig":"16"},{"size":155,"mtime":1613214279446,"results":"27","hashOfConfig":"16"},{"size":788,"mtime":1613219940860,"results":"28","hashOfConfig":"16"},{"size":392,"mtime":1613219810228,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"109tc5w",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\portfolio\\reactgram\\src\\index.js",[],["60","61"],"D:\\portfolio\\reactgram\\src\\App.js",[],"D:\\portfolio\\reactgram\\src\\reportWebVitals.js",[],"D:\\portfolio\\reactgram\\src\\firebase.js",[],"D:\\portfolio\\reactgram\\src\\utils\\pagination.js",[],"D:\\portfolio\\reactgram\\src\\components\\counters.jsx",["62","63"],"import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { pagination } from \"./../utils/pagination\";\r\nimport PaginationC from \"./common/pagination\";\r\nimport LoginForm from \"./inputForm\";\r\nimport ClassList from \"./classList\";\r\nimport Search from \"./common/search\";\r\nimport CountersTable from \"./countersTable\";\r\nimport firebaseDB from \"./../firebase.js\";\r\nimport CounterContext from \"./../context/counterContex\";\r\nimport \"./../App.css\";\r\nimport ResetButton from \"./resetButton\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    margin: \"auto\",\r\n  },\r\n});\r\n\r\nconst Counters = () => {\r\n  const classes = useStyles();\r\n\r\n  const [allCounters, setAllCounters] = useState([]);\r\n  const [classNames, setclassNames] = useState([\r\n    \"All Classes\",\r\n    \"MIT\",\r\n    \"BSCS\",\r\n    \"BSIT\",\r\n  ]);\r\n  const [pageSize, setPageSize] = useState(3);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentClass, setCurrentClass] = useState(\"All Classes\");\r\n  const [sortColumn, setSortColumn] = useState({ path: \"name\", order: \"asc\" });\r\n  const [searchString, setSearchString] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    firebaseDB.child(\"counters\").on(\"value\", (snapshot) => {\r\n      if (snapshot.val() !== null) {\r\n        const countersObj = snapshot.val();\r\n        const counters = [];\r\n        for (let id in countersObj) {\r\n          const counter = countersObj[id];\r\n          counter.id = id;\r\n          counters.push(counter);\r\n        }\r\n        setAllCounters(counters);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handlePageChange = (e, v) => {\r\n    setCurrentPage(v);\r\n  };\r\n\r\n  const handleClassChange = (c) => {\r\n    setCurrentClass(c);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchString(event.target.value);\r\n  };\r\n\r\n  const handleSort = (path) => {\r\n    const sortColumnTemp = { ...sortColumn };\r\n    if (sortColumnTemp.path === path) {\r\n      sortColumnTemp.order = sortColumnTemp.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumnTemp.path = path;\r\n      sortColumnTemp.order = \"asc\";\r\n    }\r\n    setSortColumn(sortColumnTemp);\r\n  };\r\n\r\n  const handleIncrement = (id) => {\r\n    const counter = allCounters.find((c) => c.id === id);\r\n    counter.value++;\r\n    firebaseDB.child(`counters/${id}`).set(counter, (err) => {\r\n      if (err) console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleDecrement = (id) => {\r\n    const counter = allCounters.find((c) => c.id === id);\r\n    counter.value--;\r\n    firebaseDB.child(`counters/${id}`).set(counter, (err) => {\r\n      if (err) console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    firebaseDB.child(`counters/${id}`).remove((err) => {\r\n      if (err) console.log(err);\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    let counters = [...allCounters];\r\n    const updatedCounter = counters.map((cur) => {\r\n      cur.value = 0;\r\n      return cur;\r\n    });\r\n\r\n    const countersObj = {};\r\n    for (let rec of updatedCounter) {\r\n      countersObj[rec.id] = rec;\r\n    }\r\n\r\n    firebaseDB.child(\"counters\").set(countersObj);\r\n  };\r\n\r\n  // Filter counters based on classes\r\n  const filteredCounters =\r\n    currentClass === \"All Classes\"\r\n      ? allCounters\r\n      : allCounters.filter((c) => c.stdClass === currentClass);\r\n\r\n  // Filter based on search string\r\n  const searchRes = searchString\r\n    ? filteredCounters.filter((c) => c.name.startsWith(searchString))\r\n    : filteredCounters;\r\n\r\n  const sortedCounters = _.orderBy(\r\n    searchRes,\r\n    [sortColumn.path],\r\n    [sortColumn.order]\r\n  );\r\n\r\n  const pageCount = Math.ceil(sortedCounters.length / pageSize);\r\n  const paginatedCounters = pagination(sortedCounters, currentPage, pageSize);\r\n\r\n  return (\r\n    <CounterContext.Provider\r\n      value={{\r\n        counters: paginatedCounters,\r\n        sortColumn: sortColumn,\r\n        currentPage: currentPage,\r\n        pageCount: pageCount,\r\n        classNames,\r\n        currentClass,\r\n        onReset: handleReset,\r\n        onClassChange: handleClassChange,\r\n        onSearchChange: handleSearchChange,\r\n        onIncrement: handleIncrement,\r\n        onDelete: handleDelete,\r\n        onDecrement: handleDecrement,\r\n        onSort: handleSort,\r\n        onPageChange: handlePageChange,\r\n      }}\r\n    >\r\n      <div className={classes.container}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <LoginForm />\r\n          </Grid>\r\n\r\n          <Grid item sm={2} />\r\n\r\n          <Grid container item xs={12} sm={2}>\r\n            <ClassList />\r\n          </Grid>\r\n\r\n          <Grid item container sm={6} xs={12}>\r\n            <Grid item xs={12} sm={5}>\r\n              <Search />\r\n            </Grid>\r\n\r\n            <Grid container item xs={12} spacing={1}>\r\n              <Grid item xs={12}>\r\n                <CountersTable />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <PaginationC />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item sm={2} />\r\n\r\n          <Grid item container xs={12} sm={12}>\r\n            <Grid item xs={8} />\r\n            <Grid item xs={4}>\r\n              <ResetButton />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </CounterContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Counters;\r\n","D:\\portfolio\\reactgram\\src\\components\\navbar.jsx",[],"D:\\portfolio\\reactgram\\src\\components\\inputForm.jsx",[],"D:\\portfolio\\reactgram\\src\\components\\countersTable.jsx",[],"D:\\portfolio\\reactgram\\src\\components\\common\\pagination.jsx",[],"D:\\portfolio\\reactgram\\src\\components\\common\\search.jsx",[],"D:\\portfolio\\reactgram\\src\\context\\counterContex.js",[],"D:\\portfolio\\reactgram\\src\\components\\classList.jsx",[],"D:\\portfolio\\reactgram\\src\\components\\resetButton.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":29,"column":22,"nodeType":"70","messageId":"71","endLine":29,"endColumn":35},{"ruleId":"68","severity":1,"message":"72","line":35,"column":20,"nodeType":"70","messageId":"71","endLine":35,"endColumn":31},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'setclassNames' is assigned a value but never used.","Identifier","unusedVar","'setPageSize' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]